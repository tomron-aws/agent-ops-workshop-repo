AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Agents for Amazon Bedrock example with Powertools for AWS Lambda (Python)

Globals:
  Function:
    Timeout: 30
    MemorySize: 2048
    Runtime: python3.9
    Tracing: Active
    Environment:
      Variables:
        POWERTOOLS_SERVICE_NAME: PowertoolsHelloWorld
        POWERTOOLS_LOG_LEVEL: INFO

Resources:
  ApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.lambda_handler
      Description: Agent for Amazon Bedrock handler function
      CodeUri: src/
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - bedrock:*
              Resource: '*'

  BedrockAgentPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - lambda:InvokeFunction
            Resource: !GetAtt ApiFunction.Arn

  BedrockAgentRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - bedrock.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !Ref BedrockAgentPolicy
  
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ApiFunction
      Action: lambda:InvokeFunction
      Principal: bedrock.amazonaws.com
      SourceAccount: !Ref AWS::AccountId

Outputs:
  FunctionArn:
    Description: Lambda Function ARN
    Value: !GetAtt ApiFunction.Arn
  BedrockAgentRoleArn:
    Description: IAM Role ARN for Bedrock Agent
    Value: !GetAtt BedrockAgentRole.Arn
